---
title: "Arbeidskrav 2"
format: html
editor: visual
editor_options: 
  chunk_output_type: console
---

# Oppgave 2.1

I denne oppgaven skal vi kalkulere laktatterskel på to forskjellige treningsintensiteter (2 mmol og 4 mmol. Deretter skal vi teste reliabiliteten på de to laktatterskelene og sammenlikne disse med hverandre. Vi har brukt standardfeil for å teste reliabilitet.

```{r}

#| echo: false
#| message: false
#| warning: false

library("tidyverse")
library("ggplot2")
library(exscidata)
data("cyclingstudy")

# Define the lt function to calculate lactate threshold
lt <- function(data, lactate_threshold) {
  # Fit a 3-degree polynomial model
  m <- lm(lactate ~ watt + I(watt^2) + I(watt^3), data = data)
  
  # Store a data frame with exercise intensities
  new_data <- data.frame(watt = seq(from = min(data$watt), to = max(data$watt), by = 0.01))
  
  # Predict using the new data, predicting lactate values at each intensity
  new_data$pred <- predict(m, newdata = new_data)
  
  # Calculate deviation from the lactate value of interest
  new_data$watt_threshold <- abs(new_data$pred - lactate_threshold)

  # Create a results data frame
  results <- data.frame(watt_threshold = new_data$watt[new_data$watt_threshold == min(new_data$watt_threshold)])
  
  # Return the data frame
  return(results)
}

# Extract lactate values and calculate the lactate threshold at 2 mmol
cyclingstudy %>%
  select(subject, group, timepoint, lac.125:lac.375) %>%
  pivot_longer(names_to = "watt", 
               values_to = "lactate", 
               names_prefix = "lac.", 
               names_transform = list(watt = as.numeric), 
               cols = lac.125:lac.375) %>%
  filter(!is.na(lactate)) %>%
  group_by(timepoint, subject, group) %>%
  mutate(n = n()) %>%
  filter(n >= 4) %>%
  group_modify(~ lt(., 2))  # Calculate lactate threshold at 2 mmol

# Extract lactate values and calculate the lactate threshold at 4 mmol
cyclingstudy %>%
  select(subject, group, timepoint, lac.125:lac.375) %>%
  pivot_longer(names_to = "watt", 
               values_to = "lactate", 
               names_prefix = "lac.", 
               names_transform = list(watt = as.numeric), 
               cols = lac.125:lac.375) %>%
  filter(!is.na(lactate)) %>%
  group_by(timepoint, subject, group) %>%
  mutate(n = n()) %>%
  filter(n >= 4) %>%
  group_modify(~ lt(., 4))  # Calculate lactate threshold at 4 mmol


# Calculate the lactate thresholds at 2 mmol and 4 mmol
threshold_2mmol <- cyclingstudy %>%
  select(subject, group, timepoint, lac.125:lac.375) %>%
  pivot_longer(names_to = "watt", 
               values_to = "lactate", 
               names_prefix = "lac.", 
               names_transform = list(watt = as.numeric), 
               cols = lac.125:lac.375) %>%
  filter(!is.na(lactate)) %>%
  group_by(timepoint, subject, group) %>%
  mutate(n = n()) %>%
  filter(n >= 4) %>%
  group_modify(~ lt(., 2))  # Calculate lactate threshold at 2 mmol

threshold_4mmol <- cyclingstudy %>%
  select(subject, group, timepoint, lac.125:lac.375) %>%
  pivot_longer(names_to = "watt", 
               values_to = "lactate", 
               names_prefix = "lac.", 
               names_transform = list(watt = as.numeric), 
               cols = lac.125:lac.375) %>%
  filter(!is.na(lactate)) %>%
  group_by(timepoint, subject, group) %>%
  mutate(n = n()) %>%
  filter(n >= 4) %>%
  group_modify(~ lt(., 4))  # Calculate lactate threshold at 4 mmol

# Calculate the mean lactate thresholds
mean_threshold_2mmol <- mean(threshold_2mmol$watt_threshold, na.rm = TRUE)
mean_threshold_4mmol <- mean(threshold_4mmol$watt_threshold, na.rm = TRUE)

# Calculate the typical error as a percentage of the mean
typical_error_2mmol <- (sd(threshold_2mmol$watt_threshold, na.rm = TRUE) / mean_threshold_2mmol) * 100
typical_error_4mmol <- (sd(threshold_4mmol$watt_threshold, na.rm = TRUE) / mean_threshold_4mmol) * 100

print(paste("Typical Error at 2 mmol threshold: ", typical_error_2mmol, "%"))
print(paste("Typical Error at 4 mmol threshold: ", typical_error_4mmol, "%"))


# Compare the reliability
if (typical_error_2mmol < typical_error_4mmol) {
  cat("Lactate threshold at 2 mmol is more reliable (lower typical error as a percentage of the mean) than 4 mmol.")
} else if (typical_error_2mmol > typical_error_4mmol) {
  cat("Lactate threshold at 4 mmol is more reliable (lower typical error as a percentage of the mean) than 2 mmol.")
} else {
  cat("The reliability of lactate thresholds at 2 mmol and 4 mmol is the same (typical errors are equal).")
}
```

Ut i fra utregningene kan vi se at standardfeil på 2 mmol er 17,8 %, mens standardfeil på 4 mmol er 11,5 %. En kan dermed si at laktatterskel på 4 mmol er mer reliabel enn laktatterskel på 2 mmol.

# Oppgave 2.2

```{r}

#| echo: false
#| message: false
#| warning: false

library(ggplot2)
library(readxl)


ab2 <- read_excel("arbeidskrav2-resultater.xlsx")


# Laste inn datasettet (hvis ikke allerede gjort)
# Forutsatt at datasettet heter "ab2"
# Du må angi riktig filsti hvis datasettet ikke er i samme arbeidskatalog

# Opprett en lineær regresjonsmodell
reg_model <- lm(`Avg-Ct` ~ `Log-(sample-quan)`, data = ab2)

# Skriv ut regresjonsmodellen
summary(reg_model)

ggplot(ab2, aes(x = `Log-(sample-quan)`, y = `Avg-Ct`)) +
  geom_point() +  
  geom_abline(intercept = 27, slope = -4.277, color = "black", linetype = "dashed") +  
  labs(x = "Log-(sample-quan)", y = "Avg-Ct") +  
  theme_minimal()


custom_sd <- function(x) {
  if (all(is.na(x))) {
    return(NA)  
  } else {
    return(sd(x, na.rm = TRUE))
  }
}

# Resten av koden her

((10^(-1/-4.277)) - 1) * 100







```

Resultetene fra prøven er en fortynningsrekke, hvor blandingen er fortynnet med det dobbelte for hvert steg. Svarene vi får i regresjonssabellen forteller oss hvor nøye vi har hvert med pipetering, hvor bra kvaliteten er på prøvene og om det kan være eventuelle feilkilder. Som vi kan lese ut fra svarene er det sprikende svar i resudualtallene. Dette tyder på at resultetet ikke er til å stole på. Residualtallet forteller oss hvor langt prøvene er fra den gjennomsnittlige linjen. På primer efficiency tallene ser vi at prosenten er for lav Prosenten havnet på 71,3% hvor den ønskete prosenten skulle være mellom 90-110%. En av filkilgene vi har i resultetet er at vi mangler flere resultat for å kunne regne et gjennomsnitt. Prøvene ble kopiert tre ganger lik at vi tok et gjennomsnitt av det.

# Oppgave 2.3

# Forhold mellom vekt og knebøy 3RM

I denne oppgaven skal vi se på forholdet mellom kroppsvekt og knebøy 3RM. Dataene i oppgaven er hentet fra "hypertrophy"-datasettet i "exscidata".

```{r}
#| echo: FALSE
#| message: FALSE
#| warning: FALSE

library(tidyverse)
library(ggplot2)
library(exscidata)
library(gt)
library(broom)

```

```{r}
#| label: tbl-char
#| tbl-cap: "Sammenheng mellom kroppsvekt og knebøy 3RM"
#| echo: FALSE
#| message: FALSE
#| warning: FALSE

#Komprimere datasett
dat <- hypertrophy %>%
  select(SQUAT_3RM, BODYMASS_T1) %>%
  mutate(bm_mc = BODYMASS_T1 - mean(BODYMASS_T1, na.rm=T)) 

#Lage regresjonstabell
mod <- lm(SQUAT_3RM ~ bm_mc, data = dat)

tidy(mod)%>%
  gt() %>%
  fmt_auto()

```

@tbl-char viser estimater, standardfeil, t-verdi og p-verdi for "(Intercept)" og "bm_mc". Estimatet for "(Intercept)" i tabellen viser at knebøy 3RM er 131.333 kg ved gjennomsnittelig kroppsvekt. Estimatet for "bm_mc" viser at for hver kg endring i kroppsvekt endres knebøy 3RM med 1.105 kg. Dette kan ses også ses i @fig-char.

Standardfeilen sier noe om spredningen i en estimert fordeling av teoretiske utvalg. Hvis standardfeilen er høy så varierer estimatet mye fra prøve til prøve dersom man gjennomfører forsøket flere ganger. I denne oppgaven er standardfeilen for knebøy 3RM ved gjennomsnittelig kroppsvekt 2.756. Standardfeilen for gjennomsnittelig kroppsvekt er 0.245.

T-verdien brukes ofte i hypotesetesting for å vurdere om en koeffesient i en regresjonsmodell er signifikant forskjellig fra null. Å regne ut t-verdien er en måte å kvantifisere hvor mange standardfeil koeffesienten er borte fra nullverdien. Dersom koeffesienten er signifikant forskjellig fra null betyr det at det er en betydelig sammenheng eller effekt i datasettet. Når dette er tilfelle har vi bevis for å forkaste nullhypotesen til fordel for en alternativ hypotese som indikerer at det er en reel sammenheng eller effekt. T-verdien kan regnes ut ved å dele koeffesienten på standardfeilen. T-verdien for knebøy 3RM ved gjennomsnittlig kroppsvekt er 47.657. T-verdien for gjennomsnittelig kroppsvekt er 4.516. I denne oppgaven kunne et eksempel på en nullhypotese vært at kroppsvekt ikke påvirker knebøy 3RM. Ettersom T-verdien for gjennomsnittelig kroppsvekt er signifikant forskjellig fra null gir det en sterk støtte til at kroppsvekt faktisk påvirker knebøy 3RM. Dette syntes også tydelig på grafen i @fig-char.

P-verdien brukes til å vurdere hvor signifikant resultatene fra en statistisk analyse er. Den viser sannsynligheten for å observere de observerte resultatene eller enda mere ekstreme resultater, gitt at nullhypotesen er sann. En lav p-verdi indikerer at det er lite sannsynlig å observere de observerte resultatene hvis nullhypotesen er sann, og tyder på at nullhypotesen bør forkastes til fordel for en alternativ hypotese. P-verdien for gjennomsnittlig kroppsvekt er 1.042\*10\^-4. Den lave p-verdien for gjennomsnittlig kroppsvekt viser at det er en signifikant sammenheng mellom kroppsvekt og knebøy 3RM. Det ser ut som at kroppsvekt har en betydelig positiv påvirkning på knebøy 3RM.

```{r}
#| label: fig-char
#| fig-cap: "Sammenheng mellom kroppsvekt og knebøy 3RM"
#| echo: FALSE
#| message: FALSE
#| warning: FALSE

#Lage en linjær modell
dat %>%
ggplot(aes(y = SQUAT_3RM,x = BODYMASS_T1)) + geom_point() +
  geom_smooth(method = "lm", se = FALSE)


```
